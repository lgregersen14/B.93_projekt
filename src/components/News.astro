---
const { data = [] } = Astro.props; // default to empty array

// Pull out the individual items by ID
const item2 = data.find(item => item.id === 2);
const item3 = data.find(item => item.id === 3);
const item4 = data.find(item => item.id === 4);


---

<div class="container">
<div class="box">
  <a>
    <h2>{item2?.emne}</h2>
    <div class="image-container">
<img src={`/${item2?.picture.trim()}`} alt="Image of a article" />      
<p class="overlay-text">{item2?.h1}</p>
    </div>
    <p class="below-text">{item2?.['brødtext']}</p>
  </a>
</div>


<div class="box">
  <a>
    <h2>{item3?.emne}</h2>
    <div class="image-container">
<img src={`/${item3?.picture.trim()}`} alt="Image of a article" />      
<p class="overlay-text">{item3?.h1}</p>
    </div>
    <p class="below-text">{item3?.['brødtext']}</p>
  </a>
</div>



<div class="box">
  <a>
    <h2>{item4?.emne}</h2>
    <div class="image-container">
<img src={`/${item4?.picture.trim()}`} alt="Image of a article" />      <p class="overlay-text">{item4?.h1}</p>
    </div>
    <p class="below-text">{item4?.['brødtext']}</p>
  </a>
</div>
</div>


    <style>
        @font-face {
  font-family: "display-italic";
  src: url(B.93-Display-Italic.otf);
}
@font-face {
  font-family: "display";
  src: url(B.93-Display.otf);
}
@font-face {
  font-family: "body";
  src: url(B.93-Text.otf);
}
@font-face {
  font-family: "Morion";
  src: url(Morion-Regular.otf);
}
/* Global styles */
body {
  box-sizing: border-box;
}

/* Container to hold the three boxes */
.container {
  display: flex;
  justify-content: space-between;
  gap: 30px;
padding: 150px 30px;}

/* Individual box */
.box {
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
}

/* Title above the image */
.box a h2 {
  margin-top: 25px;
  margin-bottom: 25px;
  text-align: left;
  color: #00064E;
  font-family: "Morion";
  font-size: clamp(1.5rem, 3vw, 2rem);
}

/* Line above h2 for all boxes (real for first/last, invisible for middle) */
.box:first-child h2::before,
.box:last-child h2::before,
.box:nth-child(2) h2::before {
  content: "";
  display: block;
  height: 2px;
  width: 100%;
  margin-bottom: 17px;
}

/* Real black lines on left and right boxes */
.box:first-child h2::before,
.box:last-child h2::before {
  background-color: #00064E;
}

/* Invisible line on middle box */
.box:nth-child(2) h2::before {
  background-color: transparent;
}

/* Image container with responsive height */
.image-container {
  position: relative;
  height: clamp(250px, 20vw, 400px);
  background: white;
  overflow: hidden;
}

/* Image itself */
.image-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  transition: transform 0.3s ease; /* smooth zoom */
}

/* Text over image, vertically centered, left with 10px padding */
.image-container .overlay-text {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 10px;
  color: white;
  font-family: "display";
  font-size: 50px;
  max-width: 60%;
}

/* Text below the box */
.below-text {
  margin-top: 15px;
  text-align: left;
  font-family: "body";
  color: #00064E;
  font-size: 16px;
  max-width: 70%;
}

.box:hover .image-container img {
  transform: scale(1.05); /* slightly zoom in */
} 
.box a {
  text-decoration: none; /* Remove underline from the link */
}

.box a h2,
.box a p {
  text-decoration: none; /* Ensure no underline on nested elements */

}
.box a {
color: white;
}
style>